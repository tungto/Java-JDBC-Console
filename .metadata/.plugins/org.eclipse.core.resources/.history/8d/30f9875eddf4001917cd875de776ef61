package com.laptrinhjavaweb.mapper;

import java.lang.reflect.Field;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;
import java.util.List;

import com.laptrinhjavaweb.annotation.Column;
import com.laptrinhjavaweb.annotation.Entity;

public class ResultSetMapper<T> {
	public List<T> mapRow(ResultSet rs, Class<T> zClass){
		List<T> results = new ArrayList<>();
		
		try {
			T object = zClass.newInstance();
			if(zClass.isAnnotationPresent(Entity.class)){
				ResultSetMetaData resultSetMetaData = rs.getMetaData();
				Field[] fields = zClass.getDeclaredFields();
				while(rs.next()) {
					for (int i = 0; i < resultSetMetaData.getColumnCount(); i++) {
						String colmmnName= resultSetMetaData.getColumnName(i+1);
						Object columnValue = rs.getObject(i + 1);
						for(Field field: fields) {
							if(field.isAnnotationPresent(Column.class)) {
								Column column = field.getAnnotation(Column.class);
								if(column.name().equals(colmmnName) && columnValue != null) {
									// convert data
									
									
									break;
								}
							}
						}
					}
				}
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return results;
	}
}
